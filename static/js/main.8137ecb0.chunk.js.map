{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Message","props","className","classes","messageWrapper","avatarWrapper","avatar","src","alt","triangle","messageContent","name","innerMessage","message","time","AlternativeMessage","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","errorInput","input","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","trimmedName","currentTarget","trim","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","checked","setChecked","column","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8137ecb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__JYx92\",\"error\":\"Greeting_error__1xcgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__iBa0N\",\"errorInput\":\"SuperInputText_errorInput__2tBgC\",\"error\":\"SuperInputText_error__2F6pR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__k_PKG\",\"red\":\"SuperButton_red__1mEGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__pkvc2\",\"spanClassName\":\"SuperCheckbox_spanClassName__1Mfk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3sKCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2B3UT\",\"column\":\"HW4_column__1JoRt\"};","import React from 'react';\r\nimport classes from \"./Message.module.css\";\r\n\r\n\r\ntype propsMessageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message(props: propsMessageType) {\r\n    return (\r\n        <div className={classes.messageWrapper}>\r\n            <div className={classes.avatarWrapper}>\r\n                <img className={classes.avatar} src={props.avatar} alt=\"\"/>\r\n            </div>\r\n            <div className={classes.triangle}/>\r\n            <div className={classes.messageContent}>\r\n                <div className={classes.name}>{props.name}</div>\r\n                <div className={classes.innerMessage}>{props.message}</div>\r\n                <div className={classes.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\n\r\nfunction AlternativeMessage() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            для личного творчества, могу проверить\r\n            <AlternativeMessage/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from \"react\";\r\nimport {AffairType, deleteAffair} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (id: number) => void\r\n    key: number\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <span>{props.affair.name}</span>\r\n            <span>[{props.affair.priority}]</span>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    // setFilter: (filter: FilterType) => void\r\n    setFilter: Dispatch<SetStateAction<FilterType>>\r\n    deleteAffairCallback: (id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high';\r\n\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\r\n    if (filter === \"all\") return affairs\r\n    else if (filter === \"high\") return affairs.filter(a => a.priority === \"high\")\r\n    else if (filter === \"middle\") return affairs.filter(a => a.priority === \"middle\")\r\n    else if (filter === \"low\") return  affairs.filter(a => a.priority === \"low\")\r\n    else return []\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(a => a._id != _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input\n\n    return (\n        <div>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[]\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n        const trimmedName = e.currentTarget.value.trim();\n\n        if (trimmedName) {\n            setName(trimmedName)\n            setError('')\n        } else {\n            setName('')\n            setError('Enter ur name')\n        }\n    }\n\n    const addUser = () => {\n        addUserCallback(name)\n        alert('Hello ' + {name} + ' !')\n        setName('')\n\n    }\n\n    const totalUsers = users.length;\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([])\n\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name: name\n        }\n        setUsers([...users, user])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.errorInput} ${className} ? ${error} : \"`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox\r\n                >\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from \"react\";\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from \"react\";\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            Junior-PlusSize =)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\nimport {Switch, HashRouter, Route, Redirect} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior-Plus</NavLink>\n            <div className={s.block}/>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__M1x7N\",\"messageContent\":\"Message_messageContent__3hx5P\",\"triangle\":\"Message_triangle__3Wqc2\",\"name\":\"Message_name__3jZMh\",\"innerMessage\":\"Message_innerMessage__Yi2eC\",\"time\":\"Message_time__8tISl\",\"avatarWrapper\":\"Message_avatarWrapper__3RCkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3nrs1\",\"active\":\"Header_active__28oGi\",\"block\":\"Header_block__Ro7LA\",\"header\":\"Header_header__17-_d\"};"],"sourceRoot":""}